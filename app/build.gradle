apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'me.tatarka.retrolambda'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    mavenCentral()
}


android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    afterEvaluate { project ->
        def keystorePropertiesFile = rootProject.file("certification/keystore.properties");

        if (keystorePropertiesFile.exists()) {
            def keystoreProperties = new Properties()
            keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
            signingConfigs.release_config.storeFile = file(keystoreProperties.getProperty("storeFile"))
            signingConfigs.release_config.storePassword = keystoreProperties.getProperty("storePassword")
            signingConfigs.release_config.keyAlias = keystoreProperties.getProperty("keyAlias")
            signingConfigs.release_config.keyPassword = keystoreProperties.getProperty("keyPassword")
        }
    }

    signingConfigs {
        release_config {
            /*
             * File - Project Structure - Modules(app) - Signing - release_config 수정
             * 인증서 내용을 미리 스크립트로 작성
             * Alias, Password 내용은 파일로 보관
             * certification 은 [https://github.com/ZeroPage/i_have_no_apps_secret]을 그대로 클론 받을 것
             */
//            keyAlias 'zeropage'
//            keyPassword '비밀번호 입력'
//            storeFile '파일 경로'
//            storePassword '비밀번호 입력'
        }
    }

    // flavor 에서 사용되는 기본값도 선언
    defaultConfig {
        applicationId "org.zeropage.apps.zeropage"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //상단 release_config 내용 수정 후 하단 주석 해제할 것
        signingConfig signingConfigs.release_config
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
            signingConfig signingConfigs.release_config
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    productFlavors {
        //Flavor 설정시 어플리케이션ID가 다를 경우, FireBase 콘솔가서 앱 등록을 새로 해줘야함
        mainTestConfig {
            minSdkVersion 19
            targetSdkVersion 25
            versionCode 1
            versionName "1.0"
        }
        loginConfig {
            versionNameSuffix '-loginConfig'
        }
    }

    sourceSets {
        mainTestConfig.java.srcDirs('src/mainTestConfig/java')
        logDelConfig.java.srcDirs('src/logDelConfig/java')
    }

    /* apk 추출시 파일명 자동 생성(FlavorName_BuildType_날짜_시간.apk)
     */
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            if (variant.getBuildType().getName() != "debug") {
                def date = new Date();
                def formatDate = date.format("yyMMdd")
                def formatTime = date.format("HHmmss")
                def file = output.outputFile

                output.outputFile = new File(file.parent,
                        variant.getFlavorName() + "_" + variant.getBuildType().getName()
                                + "_" + formatDate + "_" + formatTime + ".apk")
            }
        }
    }
}

/* google service 관련 라이브러리는 firebase 버전보다 낮거나 같아야함
 * FireBase 10.2.1 기준으로 진행
 */
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile('com.crashlytics.sdk.android:crashlytics:2.6.7@aar') {
        transitive = true;
    }

    // Glide 추가
    compile 'com.github.bumptech.glide:glide:4.0.0-RC1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.0.0-RC1'

    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.squareup.retrofit2:retrofit:2.2.0'
    compile 'com.squareup.retrofit2:converter-scalars:2.0.0'
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:support-vector-drawable:25.3.1'
    compile 'com.google.firebase:firebase-core:10.2.1'
    compile 'com.google.firebase:firebase-crash:10.2.1'
    compile 'com.google.firebase:firebase-messaging:10.2.1'
    compile 'com.jrummyapps:animated-svg-view:1.0.2'
    compile 'com.google.android.gms:play-services-auth:10.2.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.annimon:stream:1.0.1'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.melnykov:floatingactionbutton:1.3.0'

    androidTestCompile 'junit:junit:4.12'
    androidTestCompile 'com.android.support:support-annotations:25.3.1'

    testCompile 'junit:junit:4.12'
}

apply plugin: 'com.google.gms.google-services'
